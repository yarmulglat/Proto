<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_abobo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z=0;
as=0;
image_speed = .2;

alarm[1] = 30;
text = "alarm 1"
//punching bag create, to be overwritten by universal player variables

reset = false;
vulnerable = true;
stunned = false;
tenderized = 1;
maxtenderized = 2;

canattack = true;

canjump = true;
jump = false;

jpower = 6;
jpowermax = 25;

throwpower = 10;
tpowermax = 20;

cangrab = true;
grab = false;
grabbed = false;


throwing = false;
thrown = false;
dunk = false;

slammed = false;
dunked = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Toughen up
alarm[1] = 30;
if tenderized &gt;= maxtenderized{
    tenderized = maxtenderized}

if tenderized &gt;1 {
    tenderized -= .02;
    }
else if tenderized &lt;1 {
    tenderized = 1;
    }
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stand up and fight
sprite_index = spr_abobo;
stunned = false;
vulnerable = true;
slammed = false;
dunked = false;
image_yscale = 1;
image_xscale = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_find_depth</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Vague awareness and dunkability
if(z&gt;0)//if we're above the ground
{
    z+=as//we increase our height by our current "air speed"
    as-=.9//our air speed decreases by 1, eventually it go below zero and we'll fall
    if grab == true {
        as-=.7}
    if z &gt;=90 {
        as-=.1}
    if z&gt;= 450{
        as-=2}
}
if(z&lt;1 and as!=0)//if we've hit the ground
{
    jump = false;
    z=0;//this keeps us from going below the ground, so to speak
    as=0;//we stop moving through the air
}

if jump == false{  //test to stop dunk movement
    hspeed = 0}

 
//face your opponent
        if (x &lt;= obj_haggar.x) &amp;&amp; stunned == false &amp;&amp; dunked == false &amp;&amp; slammed == false &amp;&amp; sprite_index != spr_abobo_prone{
            image_xscale = 1;
            } else {
              image_xscale = -1;
            }
          //  if grabbed = false &amp;&amp; stunned = false { //temp fix for permastungrab
    //sprite_index = spr_abobo}

//Get grabbed, son

if place_meeting(x,y,obj_haggar) &amp;&amp; (obj_haggar.sprite_index == spr_haggar_grab) &amp;&amp; z &lt; obj_haggar.z +12 &amp;&amp; z &gt; obj_haggar.z -15 &amp;&amp; vulnerable == true{
                grabbed = true;
}

//Get punched, son - TEST

if place_meeting(x,y,obj_haggar) &amp;&amp; (obj_haggar.sprite_index == spr_haggar_punch) &amp;&amp; z &lt; obj_haggar.z +10 &amp;&amp; z &gt; obj_haggar.z -9 &amp;&amp; vulnerable == true{
                sprite_index = spr_abobo_stunned;
                image_speed = .1;
                vulnerable = false; //this is messing up animation for some reason
                stunned = true;
                tenderized += .06; //tender reduces naturally in step event
                alarm [0] = 10;
if stunned = true {
    depth = depth + 13}
               /* 
               cangrab = false
               canthrow = false
               canmove = false 
                */
}

//TESTING NEW DUNK LOCATION  !!!!!!!!!!!!!!!!!!!!!!!!!CURRENT ISSUE
if dunked == true{
    var i = obj_haggar.z;//trying to determine height at time of dunk
     grabbed = false;
     vulnerable = false;
     alarm [0] = 70 * tenderized;
        {if (obj_haggar.z ==0 &amp;&amp; obj_haggar.as ==0){
            dunked = false;
            slammed = true;
        }
        }
 }                        

   //ARE YOU SLAMMED? - I'm TRYING TO FIND OUT
{if slammed = true{//keyboard_check_pressed(ord('T')){
    reset = true;
    sprite_index = spr_abobo_prone;
    vulnerable = false;
    alarm [0] = 70 * tenderized;
    z = 1;
    as = -i; //trying to make bounce proportionate to dunk height
    }
}


{         
//grabbed!
if (grabbed = true) &amp;&amp; obj_haggar.image_xscale = 1{
obj_haggar.grab = true;
sprite_index = spr_abobo_grabbed;
image_speed = 0;
x = obj_haggar.x +30;
y = obj_haggar.y -7;
} 


if (grabbed = true) &amp;&amp; obj_haggar.image_xscale == -1 {
obj_haggar.grab = true;
sprite_index = spr_abobo_grabbed;
image_speed = 0;
x = obj_haggar.x -30;
y = obj_haggar.y -7;
} 

//charge grabbed
if grabbed = true &amp;&amp; obj_haggar.sprite_index == spr_haggar_chargegrab &amp;&amp; obj_haggar.image_xscale == 1{
x = obj_haggar.x +27 
y = obj_haggar.y;
}

if grabbed = true &amp;&amp; obj_haggar.sprite_index == spr_haggar_chargegrab &amp;&amp; obj_haggar.image_xscale == -1{
x = obj_haggar.x -33; 
y = obj_haggar.y;
}

//if grabbed and jumped
if (grabbed == true || obj_haggar.dunk == true) &amp;&amp; obj_haggar.jump = true {
{
    z=obj_haggar.z;
    as=obj_haggar.as; //we get off the ground and get an air speed same as haggar
    hspeed = obj_haggar.hspeed;
    }
}


//get throwed   ????Z-POSITION changed from 1 to obj_haggar
if thrown == true{
    grabbed = false;
    if z &lt;=0{ 
        z = 1
        } 
    as=(obj_haggar.throwpower * tenderized) + (obj_haggar.as * .6);      //as has been changed from 22 to dynamic value based on Haggar's throwpower
    sprite_index = spr_abobo_grabbed;
    thrown = false;
    alarm [0] = 70 * tenderized;
    obj_haggar.throwpower = 10;
    }

    
    //!!! DUNKING UNDER DEVELOPMENT!!!
/*{if dunked == true{
     grabbed = false;
     dunked = false;
     slammed = true;
     image_yscale = -1
     vulnerable = false;
     alarm [0] = 70 * tenderized;
        }
                         
    }*/
    
    //Test for reset state - Haven't tried yet

if reset = true{

    reset = false;
    vulnerable = true;
    stunned = false;
    tenderized = 1;
    maxtenderized = 2;

    canattack = true;

    canjump = true;
    jump = false;

    jpower = 6;
    jpowermax = 25;

    throwpower = 10;
    tpowermax = 20;

    cangrab = true;
    grab = false;
    grabbed = false;


    throwing = false;
    thrown = false;
    dunk = false;

    slammed = false;
    dunked = false;
}

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* 
if sprite_index = spr_abobo_stunned {
sprite_index = spr_abobo;
    }
*/ 
//Disabled due to stunned animation concluding via alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_small_shadow,0,x-1,y+7);
draw_sprite_ext(sprite_index,image_index,x,y-z,image_xscale*1.8,image_yscale*1.6,image_angle,image_blend,image_alpha)



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,56</point>
    <point>56,56</point>
    <point>56,172</point>
    <point>0,172</point>
  </PhysicsShapePoints>
</object>
